#!/usr/bin/env node

/**
 * ‚öôÔ∏è Fakelit.com Cloudways Configuration
 * Complete setup and configuration for fakelit.com deployment
 */

const fs = require('fs');
const path = require('path');

console.log('‚öôÔ∏è Fakelit.com Cloudways Configuration');
console.log('=====================================\n');

// Configuration
const CLOUDWAYS_DOMAIN = 'fakelit.com';
const DEPLOYMENT_DIR = path.join(__dirname, 'fakelit-deployment');

console.log('üìã Configuration Checklist:');
console.log('===========================\n');

// Step 1: Environment Variables Configuration
console.log('‚úÖ Step 1: Environment Variables Setup');
console.log('=====================================');
console.log('These variables need to be set in your Cloudways dashboard:');
console.log('');

const envVariables = {
    'NODE_ENV': 'production',
    'PORT': '3000',
    'OPENAI_API_KEY': 'your_openai_api_key_here',
    'SUPABASE_URL': 'your_supabase_project_url',
    'SUPABASE_ANON_KEY': 'your_supabase_anon_key',
    'SUPABASE_SERVICE_ROLE_KEY': 'your_supabase_service_role_key',
    'CLOUDWAYS_API_KEY': 'your_cloudways_api_key',
    'CLOUDWAYS_API_SECRET': 'your_cloudways_api_secret',
    'ENOM_USERNAME': 'your_enom_username',
    'ENOM_PASSWORD': 'your_enom_password'
};

Object.entries(envVariables).forEach(([key, value]) => {
    console.log(`   ${key}=${value}`);
});

console.log('\nüìù **How to set these in Cloudways:**');
console.log('1. Log in to Cloudways dashboard');
console.log('2. Go to your fakelit.com application');
console.log('3. Click "Application Settings"');
console.log('4. Click "Environment Variables"');
console.log('5. Add each variable above');

// Step 2: Cloudways Application Settings
console.log('\n‚úÖ Step 2: Cloudways Application Settings');
console.log('=========================================');

console.log('üîß **Application Configuration:**');
console.log('   ‚Ä¢ Application Name: fakelit-app');
console.log('   ‚Ä¢ PHP Version: 8.1 (or latest)');
console.log('   ‚Ä¢ Server: Your Cloudways server');
console.log('   ‚Ä¢ Project: Your Cloudways project');

console.log('\nüåê **Domain Configuration:**');
console.log(`   ‚Ä¢ Primary Domain: ${CLOUDWAYS_DOMAIN}`);
console.log('   ‚Ä¢ SSL Certificate: Auto-generated by Cloudways');
console.log('   ‚Ä¢ Force HTTPS: Enabled');

console.log('\nüìÅ **File Structure:**');
console.log('   ‚Ä¢ Application Path: /home/master/applications/[app-name]/');
console.log('   ‚Ä¢ Public Directory: public_html/');
console.log('   ‚Ä¢ Node.js Application: Yes');

// Step 3: Node.js Configuration
console.log('\n‚úÖ Step 3: Node.js Configuration');
console.log('===============================');

console.log('üì¶ **Package Configuration:**');
console.log('   ‚Ä¢ Node Version: 18.x or higher');
console.log('   ‚Ä¢ Start Script: node server.js');
console.log('   ‚Ä¢ Build Script: npm install');

console.log('\nüîß **Dependencies Required:**');
const dependencies = [
    'express@^4.18.2',
    'cors@^2.8.5',
    'helmet@^7.0.0',
    'compression@^1.7.4',
    'express-rate-limit@^6.10.0',
    'dotenv@^16.3.1',
    'axios@^1.5.0',
    'uuid@^9.0.0'
];

dependencies.forEach(dep => {
    console.log(`   ‚Ä¢ ${dep}`);
});

// Step 4: File Upload Configuration
console.log('\n‚úÖ Step 4: File Upload Configuration');
console.log('===================================');

console.log('üìÅ **Required Files to Upload:**');
const requiredFiles = [
    'package.json',
    'server.js',
    '.env',
    'public/index.html',
    'public/styles/',
    'public/js/',
    'public/images/',
    'routes/',
    'services/',
    'config/',
    'middleware/',
    'models/'
];

requiredFiles.forEach(file => {
    console.log(`   ‚Ä¢ ${file}`);
});

console.log('\nüì§ **Upload Method:**');
console.log('   ‚Ä¢ Use SFTP client (FileZilla, Cyberduck)');
console.log('   ‚Ä¢ Connect to your Cloudways server');
console.log('   ‚Ä¢ Upload to: public_html/ directory');
console.log('   ‚Ä¢ Maintain folder structure');

// Step 5: Database Configuration
console.log('\n‚úÖ Step 5: Database Configuration');
console.log('=================================');

console.log('üóÑÔ∏è **Supabase Setup:**');
console.log('   ‚Ä¢ Create Supabase project at: https://supabase.com');
console.log('   ‚Ä¢ Get project URL and API keys');
console.log('   ‚Ä¢ Set environment variables');
console.log('   ‚Ä¢ Database will auto-initialize');

console.log('\nüìä **Database Tables:**');
console.log('   ‚Ä¢ users - User accounts and profiles');
console.log('   ‚Ä¢ conversations - Chat history');
console.log('   ‚Ä¢ counselors - AI counselor profiles');
console.log('   ‚Ä¢ analytics - Usage statistics');

// Step 6: API Configuration
console.log('\n‚úÖ Step 6: API Configuration');
console.log('============================');

console.log('üîë **OpenAI Configuration:**');
console.log('   ‚Ä¢ Get API key from: https://platform.openai.com');
console.log('   ‚Ä¢ Set OPENAI_API_KEY environment variable');
console.log('   ‚Ä¢ Model: gpt-3.5-turbo (default)');

console.log('\nüåê **External APIs:**');
console.log('   ‚Ä¢ Cloudways API - Domain management');
console.log('   ‚Ä¢ Enom API - Domain registration');
console.log('   ‚Ä¢ Supabase - Database and auth');

// Step 7: Security Configuration
console.log('\n‚úÖ Step 7: Security Configuration');
console.log('=================================');

console.log('üîí **Security Headers:**');
console.log('   ‚Ä¢ Helmet.js - Security middleware');
console.log('   ‚Ä¢ CORS - Cross-origin requests');
console.log('   ‚Ä¢ Rate limiting - API protection');
console.log('   ‚Ä¢ SSL/HTTPS - Auto-configured by Cloudways');

console.log('\nüõ°Ô∏è **Content Security Policy:**');
console.log('   ‚Ä¢ Script sources: self, OpenAI, Supabase');
console.log('   ‚Ä¢ Style sources: self, Google Fonts');
console.log('   ‚Ä¢ Image sources: self, data, https');
console.log('   ‚Ä¢ Frame sources: Ready Player Me');

// Step 8: Performance Configuration
console.log('\n‚úÖ Step 8: Performance Configuration');
console.log('====================================');

console.log('‚ö° **Optimization Settings:**');
console.log('   ‚Ä¢ Compression - Gzip enabled');
console.log('   ‚Ä¢ Static file serving - Optimized');
console.log('   ‚Ä¢ Caching - Browser and server');
console.log('   ‚Ä¢ CDN - Cloudways CDN available');

console.log('\nüì± **Mobile Optimization:**');
console.log('   ‚Ä¢ Responsive design - Mobile-first');
console.log('   ‚Ä¢ Touch-friendly interface');
console.log('   ‚Ä¢ Fast loading times');
console.log('   ‚Ä¢ Progressive Web App ready');

// Step 9: Monitoring Configuration
console.log('\n‚úÖ Step 9: Monitoring Configuration');
console.log('===================================');

console.log('üìä **Health Checks:**');
console.log(`   ‚Ä¢ Main: https://${CLOUDWAYS_DOMAIN}/health`);
console.log(`   ‚Ä¢ API: https://${CLOUDWAYS_DOMAIN}/api/fakelit-chatbot/status`);
console.log('   ‚Ä¢ Database: Auto-monitored');
console.log('   ‚Ä¢ Performance: Cloudways monitoring');

console.log('\nüîç **Logging:**');
console.log('   ‚Ä¢ Application logs - Cloudways dashboard');
console.log('   ‚Ä¢ Error tracking - Built-in');
console.log('   ‚Ä¢ Performance metrics - Available');
console.log('   ‚Ä¢ User analytics - Optional');

// Step 10: Deployment Commands
console.log('\n‚úÖ Step 10: Deployment Commands');
console.log('==============================');

console.log('üöÄ **SSH Commands for Cloudways:**');
console.log('```bash');
console.log('# Navigate to application directory');
console.log('cd /home/master/applications/[your-app-name]/public_html/');
console.log('');
console.log('# Install dependencies');
console.log('npm install');
console.log('');
console.log('# Install additional dependencies');
console.log('npm install express-rate-limit');
console.log('');
console.log('# Check Node.js version');
console.log('node --version');
console.log('');
console.log('# Test the application');
console.log('npm start');
console.log('');
console.log('# Restart application (if needed)');
console.log('sudo systemctl restart [your-app-name]');
console.log('```');

// Step 11: Testing Configuration
console.log('\n‚úÖ Step 11: Testing Configuration');
console.log('=================================');

console.log('üß™ **Test URLs:**');
console.log(`   ‚Ä¢ Main Page: https://${CLOUDWAYS_DOMAIN}/`);
console.log(`   ‚Ä¢ Health Check: https://${CLOUDWAYS_DOMAIN}/health`);
console.log(`   ‚Ä¢ Chatbot API: https://${CLOUDWAYS_DOMAIN}/api/fakelit-chatbot/status`);
console.log(`   ‚Ä¢ Chatbot Test: https://${CLOUDWAYS_DOMAIN}/fakelit-chatbot.html`);

console.log('\n‚úÖ **Expected Results:**');
console.log('   ‚Ä¢ Main page loads with Fakelit.com branding');
console.log('   ‚Ä¢ AI chatbot appears on the right side');
console.log('   ‚Ä¢ Chatbot responds to questions');
console.log('   ‚Ä¢ All API endpoints return 200 status');
console.log('   ‚Ä¢ SSL certificate is valid');

// Step 12: Troubleshooting
console.log('\n‚úÖ Step 12: Troubleshooting Guide');
console.log('==================================');

console.log('üîß **Common Issues:**');
console.log('   ‚Ä¢ "Upgrade now" message: Files not uploaded');
console.log('   ‚Ä¢ 500 errors: Check environment variables');
console.log('   ‚Ä¢ Chatbot not working: Verify OpenAI API key');
console.log('   ‚Ä¢ Database errors: Check Supabase configuration');
console.log('   ‚Ä¢ Port issues: Cloudways handles automatically');

console.log('\nüìû **Support Resources:**');
console.log('   ‚Ä¢ Cloudways Support: https://support.cloudways.com');
console.log('   ‚Ä¢ Application Logs: Cloudways dashboard');
console.log('   ‚Ä¢ SSH Access: Available in dashboard');
console.log('   ‚Ä¢ Documentation: Check project README');

console.log('\nüéâ **Configuration Complete!**');
console.log('=============================');
console.log(`Your Fakelit.com application is now configured for Cloudways deployment.`);
console.log(`Follow the steps above to deploy and test your application.`);

console.log('\nüìã **Next Steps:**');
console.log('=================');
console.log('1. Set environment variables in Cloudways');
console.log('2. Upload all files to public_html/');
console.log('3. Install dependencies via SSH');
console.log('4. Restart the application');
console.log('5. Test all functionality');
console.log('6. Monitor performance and logs');

console.log('\n‚ú® **Fakelit.com is ready for production!** ‚ú®'); 